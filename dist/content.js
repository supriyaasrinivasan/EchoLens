/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/content/content.js":
/*!********************************!*\
  !*** ./src/content/content.js ***!
  \********************************/
/***/ (() => {

eval("{function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2)); }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// EchoLens Content Script - Context Capture Engine\n// Tracks page visits, reading time, highlights, and extracts meaningful context\nvar ContextCapture = /*#__PURE__*/function () {\n  function ContextCapture() {\n    _classCallCheck(this, ContextCapture);\n    this.startTime = Date.now();\n    this.highlights = [];\n    this.scrollDepth = 0;\n    this.interactions = 0;\n    this.idleTime = 0;\n    this.lastActivity = Date.now();\n    this.isActive = true;\n    this.init();\n  }\n  return _createClass(ContextCapture, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n      // Track scroll depth\n      this.trackScrolling();\n\n      // Track text selection/highlights\n      this.trackHighlights();\n\n      // Track user activity\n      this.trackActivity();\n\n      // Track idle time\n      this.trackIdle();\n\n      // Inject memory overlay\n      this.injectOverlay();\n\n      // Load previous context for this URL\n      this.loadPreviousContext();\n\n      // Send heartbeat every 30 seconds\n      setInterval(function () {\n        return _this.sendHeartbeat();\n      }, 30000);\n    }\n  }, {\n    key: \"trackScrolling\",\n    value: function trackScrolling() {\n      var _this2 = this;\n      var maxScroll = 0;\n      window.addEventListener('scroll', function () {\n        _this2.lastActivity = Date.now();\n        var scrollPercentage = window.scrollY / (document.documentElement.scrollHeight - window.innerHeight) * 100;\n        maxScroll = Math.max(maxScroll, scrollPercentage);\n        _this2.scrollDepth = Math.round(maxScroll);\n      });\n    }\n  }, {\n    key: \"trackHighlights\",\n    value: function trackHighlights() {\n      var _this3 = this;\n      document.addEventListener('mouseup', function () {\n        _this3.lastActivity = Date.now();\n        var selection = window.getSelection();\n        var text = selection.toString().trim();\n        if (text.length > 10 && text.length < 1000) {\n          _this3.highlights.push({\n            text: text,\n            timestamp: Date.now(),\n            context: _this3.getTextContext(selection)\n          });\n\n          // Save highlight immediately\n          _this3.saveHighlight(text);\n        }\n      });\n    }\n  }, {\n    key: \"trackActivity\",\n    value: function trackActivity() {\n      var _this4 = this;\n      ['click', 'keydown', 'mousemove'].forEach(function (event) {\n        document.addEventListener(event, function () {\n          _this4.lastActivity = Date.now();\n          if (event === 'click' || event === 'keydown') {\n            _this4.interactions++;\n          }\n        });\n      });\n    }\n  }, {\n    key: \"trackIdle\",\n    value: function trackIdle() {\n      var _this5 = this;\n      setInterval(function () {\n        var timeSinceActivity = Date.now() - _this5.lastActivity;\n\n        // If idle for more than 60 seconds, mark as inactive\n        if (timeSinceActivity > 60000) {\n          _this5.isActive = false;\n        } else {\n          _this5.isActive = true;\n        }\n      }, 5000);\n    }\n  }, {\n    key: \"getTextContext\",\n    value: function getTextContext(selection) {\n      try {\n        var range = selection.getRangeAt(0);\n        var container = range.commonAncestorContainer;\n        var parent = container.nodeType === 3 ? container.parentNode : container;\n        return parent.textContent.substring(0, 500);\n      } catch (e) {\n        return '';\n      }\n    }\n  }, {\n    key: \"extractPageContext\",\n    value: function extractPageContext() {\n      var _document$querySelect;\n      // Extract meaningful content from the page\n      var title = document.title;\n      var url = window.location.href;\n      var domain = window.location.hostname;\n\n      // Try to get main content\n      var mainContent = '';\n      var contentSelectors = ['article', 'main', '[role=\"main\"]', '.content', '.post-content', '#content'];\n      for (var _i = 0, _contentSelectors = contentSelectors; _i < _contentSelectors.length; _i++) {\n        var selector = _contentSelectors[_i];\n        var element = document.querySelector(selector);\n        if (element) {\n          mainContent = element.innerText.substring(0, 5000);\n          break;\n        }\n      }\n      if (!mainContent) {\n        mainContent = document.body.innerText.substring(0, 5000);\n      }\n\n      // Extract meta description\n      var metaDescription = ((_document$querySelect = document.querySelector('meta[name=\"description\"]')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.content) || '';\n\n      // Extract headings for structure\n      var headings = Array.from(document.querySelectorAll('h1, h2, h3')).slice(0, 10).map(function (h) {\n        return h.innerText.trim();\n      });\n      return {\n        title: title,\n        url: url,\n        domain: domain,\n        content: mainContent,\n        description: metaDescription,\n        headings: headings,\n        timestamp: Date.now(),\n        timeSpent: Math.floor((Date.now() - this.startTime) / 1000),\n        scrollDepth: this.scrollDepth,\n        interactions: this.interactions,\n        highlights: this.highlights\n      };\n    }\n  }, {\n    key: \"sendHeartbeat\",\n    value: function () {\n      var _sendHeartbeat = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var context;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              if (this.isActive) {\n                _context.n = 1;\n                break;\n              }\n              return _context.a(2);\n            case 1:\n              context = this.extractPageContext(); // Send to background script\n              chrome.runtime.sendMessage({\n                type: 'CONTEXT_UPDATE',\n                data: context\n              });\n            case 2:\n              return _context.a(2);\n          }\n        }, _callee, this);\n      }));\n      function sendHeartbeat() {\n        return _sendHeartbeat.apply(this, arguments);\n      }\n      return sendHeartbeat;\n    }()\n  }, {\n    key: \"saveHighlight\",\n    value: function () {\n      var _saveHighlight = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2(text) {\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              chrome.runtime.sendMessage({\n                type: 'SAVE_HIGHLIGHT',\n                data: {\n                  text: text,\n                  url: window.location.href,\n                  title: document.title,\n                  timestamp: Date.now()\n                }\n              });\n            case 1:\n              return _context2.a(2);\n          }\n        }, _callee2);\n      }));\n      function saveHighlight(_x) {\n        return _saveHighlight.apply(this, arguments);\n      }\n      return saveHighlight;\n    }()\n  }, {\n    key: \"loadPreviousContext\",\n    value: function () {\n      var _loadPreviousContext = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var _this6 = this;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              // Ask background script for previous visits to this URL\n              chrome.runtime.sendMessage({\n                type: 'GET_PREVIOUS_CONTEXT',\n                url: window.location.href\n              }, function (response) {\n                if (response && response.context) {\n                  _this6.showMemoryOverlay(response.context);\n                }\n              });\n            case 1:\n              return _context3.a(2);\n          }\n        }, _callee3);\n      }));\n      function loadPreviousContext() {\n        return _loadPreviousContext.apply(this, arguments);\n      }\n      return loadPreviousContext;\n    }()\n  }, {\n    key: \"injectOverlay\",\n    value: function injectOverlay() {\n      // Create the floating memory icon\n      var overlay = document.createElement('div');\n      overlay.id = 'echolens-overlay';\n      overlay.innerHTML = \"\\n      <div class=\\\"echolens-icon\\\" title=\\\"EchoLens Memory\\\">\\n        \\uD83D\\uDCAB\\n      </div>\\n      <div class=\\\"echolens-popup\\\" style=\\\"display: none;\\\">\\n        <div class=\\\"echolens-popup-content\\\">\\n          <div class=\\\"echolens-loading\\\">Loading memories...</div>\\n        </div>\\n      </div>\\n    \";\n      document.body.appendChild(overlay);\n\n      // Toggle popup on click\n      var icon = overlay.querySelector('.echolens-icon');\n      var popup = overlay.querySelector('.echolens-popup');\n      icon.addEventListener('click', function () {\n        var isVisible = popup.style.display !== 'none';\n        popup.style.display = isVisible ? 'none' : 'block';\n      });\n    }\n  }, {\n    key: \"showMemoryOverlay\",\n    value: function showMemoryOverlay(context) {\n      var popup = document.querySelector('.echolens-popup-content');\n      if (!popup) return;\n      var visits = context.visits,\n        lastVisit = context.lastVisit,\n        totalTimeSpent = context.totalTimeSpent,\n        highlights = context.highlights,\n        tags = context.tags;\n      var html = '<div class=\"echolens-memory\">';\n      if (visits > 1) {\n        html += \"\\n        <div class=\\\"memory-header\\\">\\n          <span class=\\\"memory-icon\\\">\\uD83D\\uDD2E</span>\\n          <span class=\\\"memory-title\\\">Memory Recall</span>\\n        </div>\\n        <div class=\\\"memory-stat\\\">\\n          You've been here <strong>\".concat(visits, \" times</strong>\\n        </div>\\n      \");\n        if (lastVisit) {\n          var timeSince = this.formatTimeSince(lastVisit);\n          html += \"<div class=\\\"memory-stat\\\">Last visit: <strong>\".concat(timeSince, \"</strong></div>\");\n        }\n        if (totalTimeSpent > 60) {\n          var minutes = Math.floor(totalTimeSpent / 60);\n          html += \"<div class=\\\"memory-stat\\\">Total time: <strong>\".concat(minutes, \" minutes</strong></div>\");\n        }\n        if (highlights && highlights.length > 0) {\n          html += '<div class=\"memory-section\">';\n          html += '<div class=\"memory-section-title\">Your highlights:</div>';\n          highlights.slice(0, 3).forEach(function (h) {\n            html += \"<div class=\\\"memory-highlight\\\">\\\"\".concat(h.text.substring(0, 100), \"...\\\"</div>\");\n          });\n          html += '</div>';\n        }\n        if (tags && tags.length > 0) {\n          html += '<div class=\"memory-section\">';\n          html += '<div class=\"memory-tags\">';\n          tags.forEach(function (tag) {\n            html += \"<span class=\\\"memory-tag\\\">\".concat(tag, \"</span>\");\n          });\n          html += '</div></div>';\n        }\n      } else {\n        html += \"\\n        <div class=\\\"memory-header\\\">\\n          <span class=\\\"memory-icon\\\">\\u2728</span>\\n          <span class=\\\"memory-title\\\">First Visit</span>\\n        </div>\\n        <div class=\\\"memory-stat\\\">\\n          This is your first time here. EchoLens is capturing context...\\n        </div>\\n      \";\n      }\n      html += '</div>';\n      popup.innerHTML = html;\n    }\n  }, {\n    key: \"formatTimeSince\",\n    value: function formatTimeSince(timestamp) {\n      var seconds = Math.floor((Date.now() - timestamp) / 1000);\n      if (seconds < 60) return 'just now';\n      if (seconds < 3600) return \"\".concat(Math.floor(seconds / 60), \" minutes ago\");\n      if (seconds < 86400) return \"\".concat(Math.floor(seconds / 3600), \" hours ago\");\n      if (seconds < 604800) return \"\".concat(Math.floor(seconds / 86400), \" days ago\");\n      if (seconds < 2592000) return \"\".concat(Math.floor(seconds / 604800), \" weeks ago\");\n      return \"\".concat(Math.floor(seconds / 2592000), \" months ago\");\n    }\n  }]);\n}(); // Initialize when page loads\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', function () {\n    new ContextCapture();\n  });\n} else {\n  new ContextCapture();\n}\n\n// Handle page unload - save final state\nwindow.addEventListener('beforeunload', function () {\n  var captureInstance = window.contextCapture || new ContextCapture();\n  var finalContext = captureInstance.extractPageContext();\n  chrome.runtime.sendMessage({\n    type: 'PAGE_UNLOAD',\n    data: finalContext\n  });\n});\n\n//# sourceURL=webpack://echolens/./src/content/content.js?\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/content/content.js"]();
/******/ 	
/******/ })()
;